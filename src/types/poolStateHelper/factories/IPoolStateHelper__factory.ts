/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPoolStateHelper,
  IPoolStateHelperInterface,
} from "../IPoolStateHelper";

const _abi = [
  {
    inputs: [],
    name: "INVALID_PERIOD",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract ILeveragedPool2",
        name: "pool",
        type: "address",
      },
    ],
    name: "fullCommitPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoolCommitter2",
        name: "committer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periods",
        type: "uint256",
      },
    ],
    name: "getCommitQueue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "longMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolCommitter.TotalCommitment[]",
        name: "commitQueue",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILeveragedPool2",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periods",
        type: "uint256",
      },
    ],
    name: "getExpectedState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "cumulativePendingMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBalance",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "oraclePrice",
            type: "int256",
          },
        ],
        internalType: "struct IPoolStateHelper.ExpectedPoolState",
        name: "finalExpectedPoolState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILeveragedPool2",
        name: "pool",
        type: "address",
      },
      {
        internalType: "contract IPoolCommitter2",
        name: "committer",
        type: "address",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "poolInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IPoolStateHelper__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolStateHelperInterface {
    return new utils.Interface(_abi) as IPoolStateHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPoolStateHelper {
    return new Contract(address, _abi, signerOrProvider) as IPoolStateHelper;
  }
}
