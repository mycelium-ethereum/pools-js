/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolStateHelper,
  PoolStateHelperInterface,
} from "../PoolStateHelper";

const _abi = [
  {
    inputs: [],
    name: "INVALID_PERIOD",
    type: "error",
  },
  {
    inputs: [],
    name: "LONG_INDEX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHORT_INDEX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "oldPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "poolInfo",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "leverageAmount",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "poolManagementFee",
        type: "bytes16",
      },
    ],
    name: "calculateValueTransfer",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "newPoolInfo",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "longMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolCommitter.TotalCommitment",
        name: "totalCommitment",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settlementBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pendingBurnPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolStateHelper.SideInfo",
        name: "side",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "shortBurnInstantMintSettlement",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBurnPoolTokens",
        type: "uint256",
      },
    ],
    name: "executeCommitsForSide",
    outputs: [
      {
        internalType: "uint256",
        name: "mintedPoolTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnedPooltokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "longMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolCommitter.TotalCommitment",
        name: "totalCommitment",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "poolInfo",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "burningFee",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "mintingFee",
        type: "bytes16",
      },
    ],
    name: "executeGivenCommit",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "newPoolInfo",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "longMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolCommitter.TotalCommitment",
        name: "totalCommitment",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "poolInfo",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "burningFee",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "mintingFee",
        type: "bytes16",
      },
    ],
    name: "executeInstantSettlements",
    outputs: [
      {
        internalType: "uint256",
        name: "longBurnInstantMintSettlement",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortBurnInstantMintSettlement",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILeveragedPool2",
        name: "pool",
        type: "address",
      },
    ],
    name: "fullCommitPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPoolCommitter2",
        name: "committer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periods",
        type: "uint256",
      },
    ],
    name: "getCommitQueue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "longMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolCommitter.TotalCommitment[]",
        name: "commitQueue",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILeveragedPool2",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periods",
        type: "uint256",
      },
    ],
    name: "getExpectedState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "cumulativePendingMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBalance",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "oraclePrice",
            type: "int256",
          },
        ],
        internalType: "struct IPoolStateHelper.ExpectedPoolState",
        name: "finalExpectedPoolState",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256[]",
            name: "prices",
            type: "int256[]",
          },
          {
            internalType: "uint256",
            name: "numPeriods",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolStateHelper.SMAInfo",
        name: "smaInfo",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "spotPrice",
        type: "int256",
      },
    ],
    name: "getNewPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256[]",
            name: "prices",
            type: "int256[]",
          },
          {
            internalType: "uint256",
            name: "numPeriods",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolStateHelper.SMAInfo",
        name: "updatedSmaInfo",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILeveragedPool2",
        name: "pool",
        type: "address",
      },
      {
        internalType: "contract IPoolCommitter2",
        name: "committer",
        type: "address",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "long",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settlementBalance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingBurnPoolTokens",
                type: "uint256",
              },
            ],
            internalType: "struct IPoolStateHelper.SideInfo",
            name: "short",
            type: "tuple",
          },
        ],
        internalType: "struct IPoolStateHelper.PoolInfo",
        name: "poolInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settlementBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pendingBurnPoolTokens",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolStateHelper.SideInfo",
        name: "sideInfo",
        type: "tuple",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISMAOracle",
        name: "smaOracle",
        type: "address",
      },
    ],
    name: "getSMAPrices",
    outputs: [
      {
        components: [
          {
            internalType: "int256[]",
            name: "prices",
            type: "int256[]",
          },
          {
            internalType: "uint256",
            name: "numPeriods",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolStateHelper.SMAInfo",
        name: "smaInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "isSMAOracle",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612a7e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ae07e4351161008c578063b50ef53611610066578063b50ef5361461028d578063c40f6aa9146102c2578063d69fa4c6146102ca578063f698c327146102ea57600080fd5b8063ae07e43514610246578063b1a875f714610259578063b3b7d5031461026c57600080fd5b8063345e1dba116100c8578063345e1dba1461019f578063486e51f4146101b2578063895720ca146102055780638da918e81461022657600080fd5b80630552cd18146100ef578063062e0d6914610157578063172591aa14610177575b600080fd5b6101026100fd366004612462565b61030d565b60405161014e9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b60405180910390f35b61015f600081565b6040516001600160801b03909116815260200161014e565b61018a6101853660046126e1565b610a7c565b6040805192835260208301919091520161014e565b61018a6101ad366004612684565b610c04565b6101c56101c0366004612429565b610da4565b60408051825180518252602080820151818401529083015182840152928301518051606083015292830151608082015291015160a082015260c00161014e565b610218610213366004612508565b61111a565b60405161014e9291906128a3565b610239610234366004612359565b611282565b60405161014e91906128c4565b6101c56102543660046124a7565b61150f565b6101c5610267366004612684565b61161e565b61027f61027a366004612359565b6117f5565b60405190815260200161014e565b6102a061029b3660046125ee565b6118fa565b6040516fffffffffffffffffffffffffffffffff19909116815260200161014e565b61015f600181565b6102dd6102d8366004612462565b6119a3565b60405161014e919061282b565b6102fd6102f8366004612359565b611b73565b604051901515815260200161014e565b6103466040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61034f836117f5565b821115610388576040517f15d0604400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161039d5761039683611c24565b9050610a76565b6000836001600160a01b031663b9ed8abf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d857600080fd5b505afa1580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610410919061237d565b90506000610431604051806040016040528060608152602001600081525090565b61043a83611b73565b1561053257826001600160a01b0316637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561047857600080fd5b505afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b0919061237d565b6001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e857600080fd5b505afa1580156104fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610520919061248e565b915061052b83611282565b90506105a6565b826001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561056b57600080fd5b505afa15801561057f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a3919061248e565b91505b6000866001600160a01b031663aced16616040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610619919061237d565b90506000876001600160a01b031663cd39f30f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561065657600080fd5b505afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e919061237d565b90506000886001600160a01b0316637b9e618d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106cb57600080fd5b505afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610703919061237d565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561073b57600080fd5b505afa15801561074f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610773919061248e565b9050600060405180610180016040528060008152602001610794858c6119a3565b81526040517fcdd9e1370000000000000000000000000000000000000000000000000000000081526001600160a01b038d8116600483015260209092019187169063cdd9e1379060240160206040518083038186803b1580156107f657600080fd5b505afa15801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e919061248e565b81526020018781526020018681526020016108498c86610da4565b81526020018b6001600160a01b031663ab47c2b36040518163ffffffff1660e01b815260040160206040518083038186803b15801561088757600080fd5b505afa15801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf919061240c565b6001600160801b03191681526020018b6001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561090757600080fd5b505afa15801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f919061240c565b6001600160801b0319168152602001846001600160a01b03166390f712cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf919061240c565b6001600160801b0319168152602001846001600160a01b0316635a64ad956040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0757600080fd5b505afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f919061240c565b6fffffffffffffffffffffffffffffffff19168152600060208201526040018390529050610a6c81611fd2565b9750505050505050505b92915050565b60008073__$1c55304bb94fd620584ae538170217172c$__63ab41556f8660000151868960000151610aae9190612931565b60208901516040808b015190516001600160e01b031960e087901b168152600481019490945260248401929092526044830152606482015260840160206040518083038186803b158015610b0157600080fd5b505af4158015610b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b39919061248e565b8551602087015160408089015190517fdebb52df0000000000000000000000000000000000000000000000000000000081526004810193909352602483018790526044830191909152606482015290925073__$1c55304bb94fd620584ae538170217172c$__9063debb52df9060840160206040518083038186803b158015610bc157600080fd5b505af4158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf9919061248e565b905094509492505050565b60008073__$1c55304bb94fd620584ae538170217172c$__63839dff3d8760a00151610c3388600001516118fa565b6040516001600160e01b031960e085901b16815260048101929092526fffffffffffffffffffffffffffffffff19908116602483015280881660448301528616606482015260840160606040518083038186803b158015610c9357600080fd5b505af4158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb9190612751565b9050508092505073__$1c55304bb94fd620584ae538170217172c$__63839dff3d8760800151610cfe88602001516118fa565b6040516001600160e01b031960e085901b16815260048101929092526fffffffffffffffffffffffffffffffff19908116602483015280881660448301528616606482015260840160606040518083038186803b158015610d5e57600080fd5b505af4158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d969190612751565b509297909650945050505050565b610dac6121c6565b6000836001600160a01b0316636d3e313e6040518163ffffffff1660e01b8152600401604080518083038186803b158015610de657600080fd5b505afa158015610dfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1e919061239a565b6040805160a081018252919250819081018084600060200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7057600080fd5b505afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea8919061248e565b8152602001876001600160a01b0316637e71fc7d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee657600080fd5b505afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e919061248e565b8152602001866001600160a01b031663af9149766040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5c57600080fd5b505afa158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f94919061248e565b9052815260408051606081019091526020909101908084600160200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fea57600080fd5b505afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611022919061248e565b8152602001876001600160a01b031663ba8d54686040518163ffffffff1660e01b815260040160206040518083038186803b15801561106057600080fd5b505afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611098919061248e565b8152602001866001600160a01b03166397ac250f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110d657600080fd5b505afa1580156110ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110e919061248e565b90529052949350505050565b6000611139604051806040016040528060608152602001600081525090565b8351516020850151600090819060001901831061115d576001876020015103611162565b826001015b90508067ffffffffffffffff81111561117d5761117d6129fb565b6040519080825280602002602001820160405280156111a6578160200160208202803683370190505b50845260005b838110156112295787518051829081106111c8576111c86129e5565b602002602001015183019250600184038110156112215787518051600183019081106111f6576111f66129e5565b602002602001015185600001518281518110611214576112146129e5565b6020026020010181815250505b6001016111ac565b5085820191508584600001516001830381518110611249576112496129e5565b6020026020010181815250508660200151846020018181525050826001018281611275576112756129cf565b0594505050509250929050565b6040805180820190915260608152600060208201526000826001600160a01b0316637f1975196040518163ffffffff1660e01b815260040160206040518083038186803b1580156112d257600080fd5b505afa1580156112e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130a919061248e565b90506000836001600160a01b031663dcd654796040518163ffffffff1660e01b815260040160206040518083038186803b15801561134757600080fd5b505afa15801561135b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137f919061248e565b6020840181905290506000818310156113df575060008267ffffffffffffffff8111156113ae576113ae6129fb565b6040519080825280602002602001820160405280156113d7578160200160208202803683370190505b508452611430565b50808203600101600019820167ffffffffffffffff811115611403576114036129fb565b60405190808252806020026020018201604052801561142c578160200160208202803683370190505b5084525b805b83811015611506576040517f61aaf0b3000000000000000000000000000000000000000000000000000000008152600481018290526001600160a01b038716906361aaf0b39060240160206040518083038186803b15801561149357600080fd5b505afa1580156114a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cb919061248e565b85518486106114e15760018686850103036114e3565b825b815181106114f3576114f36129e5565b6020908102919091010152600101611432565b50505050919050565b6115176121c6565b835160209081015181860151909101516040517fb89bf2ef000000000000000000000000000000000000000000000000000000008152600481019290925260248201526fffffffffffffffffffffffffffffffff1980851660448301526064820188905260848201879052831660a4820152600090819073__$1c55304bb94fd620584ae538170217172c$__9063b89bf2ef9060c40160806040518083038186803b1580156115c557600080fd5b505af41580156115d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fd919061277f565b50508751602090810192909252818801519091015250939695505050505050565b6116266121c6565b6040805160a081018252855151918101918252855160200151875191928392909160608401916116569190612931565b8152602001876000015160400151815250815260200160405180606001604052808760200151600001518152602001876020015160200151896040015161169d9190612931565b815260208881015160400151910152905290506000806116bf87878787610c04565b915091508183602001516020018181516116d99190612931565b905250825160200180518291906116f1908390612931565b90525060a0870151602088015160009161170a91612931565b905060008061171f8a8a600001518686610a7c565b9150915080866000015160200181815161173991906129a2565b9052508551805183919061174e908390612931565b905250855160400180518491906117669083906129a2565b9052505050506080870151606088015160009161178291612931565b90506000806117978a8a602001518786610a7c565b915091508086602001516020018181516117b191906129a2565b905250602086015180518391906117c9908390612931565b905250602086015160400180518491906117e49083906129a2565b905250949998505050505050505050565b6000816001600160a01b031663fd2c80ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561183057600080fd5b505afa158015611844573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186891906127b5565b826001600160a01b0316637bfe789a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118a157600080fd5b505afa1580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d991906127b5565b6118e39190612971565b6118ee906001612949565b63ffffffff1692915050565b600073__$1c55304bb94fd620584ae538170217172c$__635cf4ee9183602001518460400151856000015161192f9190612931565b6040516001600160e01b031960e085901b1681526004810192909252602482015260440160206040518083038186803b15801561196b57600080fd5b505af415801561197f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a76919061240c565b60606000836001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156119e057600080fd5b505afa1580156119f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a189190612728565b6001600160801b031690508267ffffffffffffffff811115611a3c57611a3c6129fb565b604051908082528060200260200182016040528015611aa657816020015b611a936040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081611a5a5790505b50915060005b83811015611b6b576040517ffe58985800000000000000000000000000000000000000000000000000000000815281830160048201526001600160a01b0386169063fe5898589060240160c06040518083038186803b158015611b0e57600080fd5b505afa158015611b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b46919061260a565b838281518110611b5857611b586129e5565b6020908102919091010152600101611aac565b505092915050565b6000816001600160a01b031663dcd654796040518163ffffffff1660e01b815260040160206040518083038186803b158015611bae57600080fd5b505afa925050508015611bde575060408051601f3d908101601f19168201909252611bdb9181019061248e565b60015b611c1b573d808015611c0c576040519150601f19603f3d011682016040523d82523d6000602084013e611c11565b606091505b5060009392505050565b50600192915050565b611c5d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000826001600160a01b0316636d3e313e6040518163ffffffff1660e01b8152600401604080518083038186803b158015611c9757600080fd5b505afa158015611cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccf919061239a565b90506000836001600160a01b031663b9ed8abf6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d0c57600080fd5b505afa158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d44919061237d565b90506040518060c00160405280600081526020018360006001600160801b031660028110611d7457611d746129e5565b60200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611db157600080fd5b505afa158015611dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de9919061248e565b8152602001856001600160a01b0316637e71fc7d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e2757600080fd5b505afa158015611e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5f919061248e565b815260200183600160200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ea457600080fd5b505afa158015611eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edc919061248e565b8152602001856001600160a01b031663ba8d54686040518163ffffffff1660e01b815260040160206040518083038186803b158015611f1a57600080fd5b505afa158015611f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f52919061248e565b8152602001826001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f9057600080fd5b505afa158015611fa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc8919061248e565b9052949350505050565b61200b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600061202a604051806040016040528060608152602001600081525090565b60808401516020015161204857505060608201516080830151612060565b61205a8460800151856060015161111a565b90925090505b60006120b5856020015186600001518151811061207f5761207f6129e5565b60200260200101516120a48760400151868960a001518a60c001518b60e0015161150f565b87610100015188610120015161161e565b9050600085602001518660000151815181106120d3576120d36129e5565b60200260200101516040015186602001518760000151815181106120f9576120f96129e5565b6020026020010151600001518761014001516121159190612931565b61211f9190612931565b602087015151875191925090612136906001612931565b1415612184576040805160c08101825282815283515160208083019190915284518101519282019290925283820180515160608301525190910151608082015260a081018590529450611506565b85518690612193906001612931565b815260a08101839052604081018590526101408101829052608081018490526121bb81611fd2565b979650505050505050565b60405180604001604052806121f560405180606001604052806000815260200160008152602001600081525090565b815260200161221e60405180606001604052806000815260200160008152602001600081525090565b905290565b600060c0828403121561223557600080fd5b6040516040810181811067ffffffffffffffff82111715612258576122586129fb565b6040529050806122688484612283565b81526122778460608501612283565b60208201525092915050565b60006060828403121561229557600080fd5b6040516060810181811067ffffffffffffffff821117156122b8576122b86129fb565b80604052508091508235815260208301356020820152604083013560408201525092915050565b600060c082840312156122f157600080fd5b60405160c0810181811067ffffffffffffffff82111715612314576123146129fb565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b60006020828403121561236b57600080fd5b813561237681612a11565b9392505050565b60006020828403121561238f57600080fd5b815161237681612a11565b6000604082840312156123ac57600080fd5b82601f8301126123bb57600080fd5b6123c36128d7565b8083856040860111156123d557600080fd5b60005b60028110156124015781516123ec81612a11565b845260209384019391909101906001016123d8565b509095945050505050565b60006020828403121561241e57600080fd5b815161237681612a29565b6000806040838503121561243c57600080fd5b823561244781612a11565b9150602083013561245781612a11565b809150509250929050565b6000806040838503121561247557600080fd5b823561248081612a11565b946020939093013593505050565b6000602082840312156124a057600080fd5b5051919050565b600080600080600061014086880312156124c057600080fd5b85359450602086013593506124d88760408801612223565b92506101008601356124e981612a29565b91506101208601356124fa81612a29565b809150509295509295909350565b6000806040838503121561251b57600080fd5b823567ffffffffffffffff8082111561253357600080fd5b908401906040828703121561254757600080fd5b61254f6128d7565b82358281111561255e57600080fd5b8301601f8101881361256f57600080fd5b8035602084821115612583576125836129fb565b8160051b9450612594818601612900565b8281528181019084830187860184018d10156125af57600080fd5b600097505b848810156125d25780358352600197909701969183019183016125b4565b5085525094850135858401525090979590920135955050505050565b60006060828403121561260057600080fd5b6123768383612283565b600060c0828403121561261c57600080fd5b60405160c0810181811067ffffffffffffffff8211171561263f5761263f6129fb565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6000806000806101c0858703121561269b57600080fd5b6126a586866122df565b93506126b48660c08701612223565b92506101808501356126c581612a29565b91506101a08501356126d681612a29565b939692955090935050565b60008060008061016085870312156126f857600080fd5b61270286866122df565b93506127118660c08701612283565b939693955050505061012082013591610140013590565b60006020828403121561273a57600080fd5b81516001600160801b038116811461237657600080fd5b60008060006060848603121561276657600080fd5b8351925060208401519150604084015190509250925092565b6000806000806080858703121561279557600080fd5b505082516020840151604085015160609095015191969095509092509050565b6000602082840312156127c757600080fd5b815163ffffffff8116811461237657600080fd5b805160408084528151908401819052600091602091908201906060860190845b81811015612817578351835292840192918401916001016127fb565b505093820151949091019390935250919050565b602080825282518282018190526000919060409081850190868401855b828110156128965781518051855286810151878601528581015186860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101612848565b5091979650505050505050565b8281526040602082015260006128bc60408301846127db565b949350505050565b60208152600061237660208301846127db565b6040805190810167ffffffffffffffff811182821017156128fa576128fa6129fb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612929576129296129fb565b604052919050565b60008219821115612944576129446129b9565b500190565b600063ffffffff808316818516808303821115612968576129686129b9565b01949350505050565b600063ffffffff8084168061299657634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6000828210156129b4576129b46129b9565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612a2657600080fd5b50565b6fffffffffffffffffffffffffffffffff1981168114612a2657600080fdfea26469706673582212206a455bea50f892db84d3882b33f0832a793d56d219323b6ef42df8af0b2283cf64736f6c63430008070033";

type PoolStateHelperConstructorParams =
  | [linkLibraryAddresses: PoolStateHelperLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolStateHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PoolStateHelper__factory extends ContractFactory {
  constructor(...args: PoolStateHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PoolStateHelper__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PoolStateHelperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1c55304bb94fd620584ae538170217172c\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/PoolSwapLibrary.sol:PoolSwapLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolStateHelper> {
    return super.deploy(overrides || {}) as Promise<PoolStateHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolStateHelper {
    return super.attach(address) as PoolStateHelper;
  }
  connect(signer: Signer): PoolStateHelper__factory {
    return super.connect(signer) as PoolStateHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolStateHelperInterface {
    return new utils.Interface(_abi) as PoolStateHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolStateHelper {
    return new Contract(address, _abi, signerOrProvider) as PoolStateHelper;
  }
}

export interface PoolStateHelperLibraryAddresses {
  ["contracts/libraries/PoolSwapLibrary.sol:PoolSwapLibrary"]: string;
}
