"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PoolStateHelper__factory = void 0;

var _ethers = require("ethers");

/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
const _abi = [{
  inputs: [],
  name: "INVALID_PERIOD",
  type: "error"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "address",
    name: "previousAdmin",
    type: "address"
  }, {
    indexed: false,
    internalType: "address",
    name: "newAdmin",
    type: "address"
  }],
  name: "AdminChanged",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "beacon",
    type: "address"
  }],
  name: "BeaconUpgraded",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: false,
    internalType: "uint8",
    name: "version",
    type: "uint8"
  }],
  name: "Initialized",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "previousOwner",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "OwnershipTransferred",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "implementation",
    type: "address"
  }],
  name: "Upgraded",
  type: "event"
}, {
  inputs: [],
  name: "LONG_INDEX",
  outputs: [{
    internalType: "uint128",
    name: "",
    type: "uint128"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "SHORT_INDEX",
  outputs: [{
    internalType: "uint128",
    name: "",
    type: "uint128"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "int256",
    name: "oldPrice",
    type: "int256"
  }, {
    internalType: "int256",
    name: "newPrice",
    type: "int256"
  }, {
    components: [{
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "long",
      type: "tuple"
    }, {
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "short",
      type: "tuple"
    }],
    internalType: "struct IPoolStateHelper.PoolInfo",
    name: "poolInfo",
    type: "tuple"
  }, {
    internalType: "bytes16",
    name: "leverageAmount",
    type: "bytes16"
  }, {
    internalType: "bytes16",
    name: "poolManagementFee",
    type: "bytes16"
  }],
  name: "calculateValueTransfer",
  outputs: [{
    components: [{
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "long",
      type: "tuple"
    }, {
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "short",
      type: "tuple"
    }],
    internalType: "struct IPoolStateHelper.PoolInfo",
    name: "newPoolInfo",
    type: "tuple"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "longMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnLongMintPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnShortMintPoolTokens",
      type: "uint256"
    }],
    internalType: "struct IPoolCommitter.TotalCommitment",
    name: "totalCommitment",
    type: "tuple"
  }, {
    components: [{
      internalType: "uint256",
      name: "supply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "settlementBalance",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pendingBurnPoolTokens",
      type: "uint256"
    }],
    internalType: "struct IPoolStateHelper.SideInfo",
    name: "side",
    type: "tuple"
  }, {
    internalType: "uint256",
    name: "shortBurnInstantMintSettlement",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "totalBurnPoolTokens",
    type: "uint256"
  }],
  name: "executeCommitsForSide",
  outputs: [{
    internalType: "uint256",
    name: "mintedPoolTokens",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "burnedPooltokens",
    type: "uint256"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "longMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnLongMintPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnShortMintPoolTokens",
      type: "uint256"
    }],
    internalType: "struct IPoolCommitter.TotalCommitment",
    name: "totalCommitment",
    type: "tuple"
  }, {
    components: [{
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "long",
      type: "tuple"
    }, {
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "short",
      type: "tuple"
    }],
    internalType: "struct IPoolStateHelper.PoolInfo",
    name: "poolInfo",
    type: "tuple"
  }, {
    internalType: "bytes16",
    name: "burningFee",
    type: "bytes16"
  }, {
    internalType: "bytes16",
    name: "mintingFee",
    type: "bytes16"
  }],
  name: "executeGivenCommit",
  outputs: [{
    components: [{
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "long",
      type: "tuple"
    }, {
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "short",
      type: "tuple"
    }],
    internalType: "struct IPoolStateHelper.PoolInfo",
    name: "newPoolInfo",
    type: "tuple"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "longMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnLongMintPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnShortMintPoolTokens",
      type: "uint256"
    }],
    internalType: "struct IPoolCommitter.TotalCommitment",
    name: "totalCommitment",
    type: "tuple"
  }, {
    components: [{
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "long",
      type: "tuple"
    }, {
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "short",
      type: "tuple"
    }],
    internalType: "struct IPoolStateHelper.PoolInfo",
    name: "poolInfo",
    type: "tuple"
  }, {
    internalType: "bytes16",
    name: "burningFee",
    type: "bytes16"
  }, {
    internalType: "bytes16",
    name: "mintingFee",
    type: "bytes16"
  }],
  name: "executeInstantSettlements",
  outputs: [{
    internalType: "uint256",
    name: "longBurnInstantMintSettlement",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "shortBurnInstantMintSettlement",
    type: "uint256"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "contract ILeveragedPool2",
    name: "pool",
    type: "address"
  }],
  name: "fullCommitPeriod",
  outputs: [{
    internalType: "uint256",
    name: "",
    type: "uint256"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "contract IPoolCommitter2",
    name: "committer",
    type: "address"
  }, {
    internalType: "uint256",
    name: "periods",
    type: "uint256"
  }],
  name: "getCommitQueue",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "longMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBurnLongMintPoolTokens",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBurnShortMintPoolTokens",
      type: "uint256"
    }],
    internalType: "struct IPoolCommitter.TotalCommitment[]",
    name: "commitQueue",
    type: "tuple[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "contract ILeveragedPool2",
    name: "pool",
    type: "address"
  }, {
    internalType: "uint256",
    name: "periods",
    type: "uint256"
  }],
  name: "getExpectedState",
  outputs: [{
    components: [{
      internalType: "uint256",
      name: "cumulativePendingMintSettlement",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "longBalance",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortSupply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "shortBalance",
      type: "uint256"
    }, {
      internalType: "int256",
      name: "oraclePrice",
      type: "int256"
    }],
    internalType: "struct IPoolStateHelper.ExpectedPoolState",
    name: "finalExpectedPoolState",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "int256[]",
      name: "prices",
      type: "int256[]"
    }, {
      internalType: "uint256",
      name: "numPeriods",
      type: "uint256"
    }],
    internalType: "struct IPoolStateHelper.SMAInfo",
    name: "smaInfo",
    type: "tuple"
  }, {
    internalType: "int256",
    name: "spotPrice",
    type: "int256"
  }],
  name: "getNewPrice",
  outputs: [{
    internalType: "int256",
    name: "",
    type: "int256"
  }, {
    components: [{
      internalType: "int256[]",
      name: "prices",
      type: "int256[]"
    }, {
      internalType: "uint256",
      name: "numPeriods",
      type: "uint256"
    }],
    internalType: "struct IPoolStateHelper.SMAInfo",
    name: "updatedSmaInfo",
    type: "tuple"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "contract ILeveragedPool2",
    name: "pool",
    type: "address"
  }, {
    internalType: "contract IPoolCommitter2",
    name: "committer",
    type: "address"
  }],
  name: "getPoolInfo",
  outputs: [{
    components: [{
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "long",
      type: "tuple"
    }, {
      components: [{
        internalType: "uint256",
        name: "supply",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "settlementBalance",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256"
      }],
      internalType: "struct IPoolStateHelper.SideInfo",
      name: "short",
      type: "tuple"
    }],
    internalType: "struct IPoolStateHelper.PoolInfo",
    name: "poolInfo",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    components: [{
      internalType: "uint256",
      name: "supply",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "settlementBalance",
      type: "uint256"
    }, {
      internalType: "uint256",
      name: "pendingBurnPoolTokens",
      type: "uint256"
    }],
    internalType: "struct IPoolStateHelper.SideInfo",
    name: "sideInfo",
    type: "tuple"
  }],
  name: "getPrice",
  outputs: [{
    internalType: "bytes16",
    name: "",
    type: "bytes16"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "contract ISMAOracle",
    name: "smaOracle",
    type: "address"
  }],
  name: "getSMAPrices",
  outputs: [{
    components: [{
      internalType: "int256[]",
      name: "prices",
      type: "int256[]"
    }, {
      internalType: "uint256",
      name: "numPeriods",
      type: "uint256"
    }],
    internalType: "struct IPoolStateHelper.SMAInfo",
    name: "smaInfo",
    type: "tuple"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "initialize",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "oracle",
    type: "address"
  }],
  name: "isSMAOracle",
  outputs: [{
    internalType: "bool",
    name: "result",
    type: "bool"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "owner",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "proxiableUUID",
  outputs: [{
    internalType: "bytes32",
    name: "",
    type: "bytes32"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [],
  name: "renounceOwnership",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "transferOwnership",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "newImplementation",
    type: "address"
  }],
  name: "upgradeTo",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "newImplementation",
    type: "address"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "upgradeToAndCall",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}];
const _bytecode = "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c61397361005260003960008181610fa10152818161102b015281816114980152818161151d015261160701526139736000f3fe60806040526004361061016a5760003560e01c8063895720ca116100cb578063b3b7d5031161007f578063d69fa4c611610059578063d69fa4c614610482578063f2fde38b146104af578063f698c327146104cf57600080fd5b8063b3b7d5031461040b578063b50ef5361461042b578063c40f6aa91461046d57600080fd5b80638da918e8116100b05780638da918e81461039e578063ae07e435146103cb578063b1a875f7146103eb57600080fd5b8063895720ca146103485780638da5cb5b1461037657600080fd5b8063486e51f41161012257806352d1902d1161010757806352d1902d146102fb578063715018a61461031e5780638129fc1c1461033357600080fd5b8063486e51f4146102885780634f1ef286146102e857600080fd5b8063172591aa11610153578063172591aa14610211578063345e1dba146102465780633659cfe61461026657600080fd5b80630552cd181461016f578063062e0d69146101e4575b600080fd5b34801561017b57600080fd5b5061018f61018a3660046132d1565b6104ff565b6040516101db9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b60405180910390f35b3480156101f057600080fd5b506101f9600081565b6040516001600160801b0390911681526020016101db565b34801561021d57600080fd5b5061023161022c366004613537565b610c6e565b604080519283526020830191909152016101db565b34801561025257600080fd5b506102316102613660046134da565b610df6565b34801561027257600080fd5b5061028661028136600461310e565b610f96565b005b34801561029457600080fd5b506102a86102a3366004613298565b611117565b60408051825180518252602080820151818401529083015182840152928301518051606083015292830151608082015291015160a082015260c0016101db565b6102866102f6366004613148565b61148d565b34801561030757600080fd5b506103106115fa565b6040519081526020016101db565b34801561032a57600080fd5b506102866116bf565b34801561033f57600080fd5b506102866116d3565b34801561035457600080fd5b5061036861036336600461335e565b6117fa565b6040516101db929190613715565b34801561038257600080fd5b506033546040516001600160a01b0390911681526020016101db565b3480156103aa57600080fd5b506103be6103b936600461310e565b611962565b6040516101db9190613769565b3480156103d757600080fd5b506102a86103e63660046132fd565b611bef565b3480156103f757600080fd5b506102a86104063660046134da565b611cfe565b34801561041757600080fd5b5061031061042636600461310e565b611ed5565b34801561043757600080fd5b5061044b610446366004613444565b611fda565b6040516fffffffffffffffffffffffffffffffff1990911681526020016101db565b34801561047957600080fd5b506101f9600181565b34801561048e57600080fd5b506104a261049d3660046132d1565b612083565b6040516101db919061369d565b3480156104bb57600080fd5b506102866104ca36600461310e565b612253565b3480156104db57600080fd5b506104ef6104ea36600461310e565b6122e0565b60405190151581526020016101db565b6105386040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b61054183611ed5565b82111561057a576040517f15d0604400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161058f5761058883612391565b9050610c68565b6000836001600160a01b031663b9ed8abf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105ca57600080fd5b505afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610602919061312b565b90506000610623604051806040016040528060608152602001600081525090565b61062c836122e0565b1561072457826001600160a01b0316637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561066a57600080fd5b505afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a2919061312b565b6001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610712919061327f565b915061071d83611962565b9050610798565b826001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561075d57600080fd5b505afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610795919061327f565b91505b6000866001600160a01b031663aced16616040518163ffffffff1660e01b815260040160206040518083038186803b1580156107d357600080fd5b505afa1580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b919061312b565b90506000876001600160a01b031663cd39f30f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561084857600080fd5b505afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610880919061312b565b90506000886001600160a01b0316637b9e618d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108bd57600080fd5b505afa1580156108d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f5919061312b565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561092d57600080fd5b505afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610965919061327f565b9050600060405180610180016040528060008152602001610986858c612083565b81526040517fcdd9e1370000000000000000000000000000000000000000000000000000000081526001600160a01b038d8116600483015260209092019187169063cdd9e1379060240160206040518083038186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a20919061327f565b8152602001878152602001868152602001610a3b8c86611117565b81526020018b6001600160a01b031663ab47c2b36040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7957600080fd5b505afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190613262565b6001600160801b03191681526020018b6001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015610af957600080fd5b505afa158015610b0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b319190613262565b6001600160801b0319168152602001846001600160a01b03166390f712cc6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7957600080fd5b505afa158015610b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb19190613262565b6001600160801b0319168152602001846001600160a01b0316635a64ad956040518163ffffffff1660e01b815260040160206040518083038186803b158015610bf957600080fd5b505afa158015610c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c319190613262565b6fffffffffffffffffffffffffffffffff19168152600060208201526040018390529050610c5e8161273f565b9750505050505050505b92915050565b60008073__$1c55304bb94fd620584ae538170217172c$__63ab41556f8660000151868960000151610ca091906137d6565b60208901516040808b015190516001600160e01b031960e087901b168152600481019490945260248401929092526044830152606482015260840160206040518083038186803b158015610cf357600080fd5b505af4158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b919061327f565b8551602087015160408089015190517fdebb52df0000000000000000000000000000000000000000000000000000000081526004810193909352602483018790526044830191909152606482015290925073__$1c55304bb94fd620584ae538170217172c$__9063debb52df9060840160206040518083038186803b158015610db357600080fd5b505af4158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb919061327f565b905094509492505050565b60008073__$1c55304bb94fd620584ae538170217172c$__63839dff3d8760a00151610e258860000151611fda565b6040516001600160e01b031960e085901b16815260048101929092526fffffffffffffffffffffffffffffffff19908116602483015280881660448301528616606482015260840160606040518083038186803b158015610e8557600080fd5b505af4158015610e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebd91906135a7565b9050508092505073__$1c55304bb94fd620584ae538170217172c$__63839dff3d8760800151610ef08860200151611fda565b6040516001600160e01b031960e085901b16815260048101929092526fffffffffffffffffffffffffffffffff19908116602483015280881660448301528616606482015260840160606040518083038186803b158015610f5057600080fd5b505af4158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8891906135a7565b509297909650945050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156110295760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110847f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146110ef5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401611020565b6110f881612933565b604080516000808252602082019092526111149183919061293b565b50565b61111f612f7b565b6000836001600160a01b0316636d3e313e6040518163ffffffff1660e01b8152600401604080518083038186803b15801561115957600080fd5b505afa15801561116d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119191906131f0565b6040805160a081018252919250819081018084600060200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e357600080fd5b505afa1580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b919061327f565b8152602001876001600160a01b0316637e71fc7d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561125957600080fd5b505afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611291919061327f565b8152602001866001600160a01b031663af9149766040518163ffffffff1660e01b815260040160206040518083038186803b1580156112cf57600080fd5b505afa1580156112e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611307919061327f565b9052815260408051606081019091526020909101908084600160200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561135d57600080fd5b505afa158015611371573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611395919061327f565b8152602001876001600160a01b031663ba8d54686040518163ffffffff1660e01b815260040160206040518083038186803b1580156113d357600080fd5b505afa1580156113e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140b919061327f565b8152602001866001600160a01b03166397ac250f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561144957600080fd5b505afa15801561145d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611481919061327f565b90529052949350505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561151b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401611020565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166115767f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146115e15760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401611020565b6115ea82612933565b6115f68282600161293b565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461169a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401611020565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6116c7612aef565b6116d16000612b49565b565b600054610100900460ff16158080156116f35750600054600160ff909116105b8061170d5750303b15801561170d575060005460ff166001145b61177f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401611020565b6000805460ff1916600117905580156117a2576000805461ff0019166101001790555b6117aa612ba8565b6117b2612c1b565b8015611114576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6000611819604051806040016040528060608152602001600081525090565b8351516020850151600090819060001901831061183d576001876020015103611842565b826001015b90508067ffffffffffffffff81111561185d5761185d6138cc565b604051908082528060200260200182016040528015611886578160200160208202803683370190505b50845260005b838110156119095787518051829081106118a8576118a86138b6565b602002602001015183019250600184038110156119015787518051600183019081106118d6576118d66138b6565b6020026020010151856000015182815181106118f4576118f46138b6565b6020026020010181815250505b60010161188c565b5085820191508584600001516001830381518110611929576119296138b6565b6020026020010181815250508660200151846020018181525050826001018281611955576119556138a0565b0594505050509250929050565b6040805180820190915260608152600060208201526000826001600160a01b0316637f1975196040518163ffffffff1660e01b815260040160206040518083038186803b1580156119b257600080fd5b505afa1580156119c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ea919061327f565b90506000836001600160a01b031663dcd654796040518163ffffffff1660e01b815260040160206040518083038186803b158015611a2757600080fd5b505afa158015611a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5f919061327f565b602084018190529050600081831015611abf575060008267ffffffffffffffff811115611a8e57611a8e6138cc565b604051908082528060200260200182016040528015611ab7578160200160208202803683370190505b508452611b10565b50808203600101600019820167ffffffffffffffff811115611ae357611ae36138cc565b604051908082528060200260200182016040528015611b0c578160200160208202803683370190505b5084525b805b83811015611be6576040517f61aaf0b3000000000000000000000000000000000000000000000000000000008152600481018290526001600160a01b038716906361aaf0b39060240160206040518083038186803b158015611b7357600080fd5b505afa158015611b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bab919061327f565b8551848610611bc1576001868685010303611bc3565b825b81518110611bd357611bd36138b6565b6020908102919091010152600101611b12565b50505050919050565b611bf7612f7b565b835160209081015181860151909101516040517fb89bf2ef000000000000000000000000000000000000000000000000000000008152600481019290925260248201526fffffffffffffffffffffffffffffffff1980851660448301526064820188905260848201879052831660a4820152600090819073__$1c55304bb94fd620584ae538170217172c$__9063b89bf2ef9060c40160806040518083038186803b158015611ca557600080fd5b505af4158015611cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdd91906135d5565b50508751602090810192909252818801519091015250939695505050505050565b611d06612f7b565b6040805160a08101825285515191810191825285516020015187519192839290916060840191611d3691906137d6565b81526020018760000151604001518152508152602001604051806060016040528087602001516000015181526020018760200151602001518960400151611d7d91906137d6565b81526020888101516040015191015290529050600080611d9f87878787610df6565b91509150818360200151602001818151611db991906137d6565b90525082516020018051829190611dd19083906137d6565b90525060a08701516020880151600091611dea916137d6565b9050600080611dff8a8a600001518686610c6e565b91509150808660000151602001818151611e199190613847565b90525085518051839190611e2e9083906137d6565b90525085516040018051849190611e46908390613847565b90525050505060808701516060880151600091611e62916137d6565b9050600080611e778a8a602001518786610c6e565b91509150808660200151602001818151611e919190613847565b90525060208601518051839190611ea99083906137d6565b90525060208601516040018051849190611ec4908390613847565b905250949998505050505050505050565b6000816001600160a01b031663fd2c80ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f1057600080fd5b505afa158015611f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f48919061360b565b826001600160a01b0316637bfe789a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611f8157600080fd5b505afa158015611f95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb9919061360b565b611fc39190613816565b611fce9060016137ee565b63ffffffff1692915050565b600073__$1c55304bb94fd620584ae538170217172c$__635cf4ee9183602001518460400151856000015161200f91906137d6565b6040516001600160e01b031960e085901b1681526004810192909252602482015260440160206040518083038186803b15801561204b57600080fd5b505af415801561205f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190613262565b60606000836001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120c057600080fd5b505afa1580156120d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f8919061357e565b6001600160801b031690508267ffffffffffffffff81111561211c5761211c6138cc565b60405190808252806020026020018201604052801561218657816020015b6121736040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161213a5790505b50915060005b8381101561224b576040517ffe58985800000000000000000000000000000000000000000000000000000000815281830160048201526001600160a01b0386169063fe5898589060240160c06040518083038186803b1580156121ee57600080fd5b505afa158015612202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122269190613460565b838281518110612238576122386138b6565b602090810291909101015260010161218c565b505092915050565b61225b612aef565b6001600160a01b0381166122d75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401611020565b61111481612b49565b6000816001600160a01b031663dcd654796040518163ffffffff1660e01b815260040160206040518083038186803b15801561231b57600080fd5b505afa92505050801561234b575060408051601f3d908101601f191682019092526123489181019061327f565b60015b612388573d808015612379576040519150601f19603f3d011682016040523d82523d6000602084013e61237e565b606091505b5060009392505050565b50600192915050565b6123ca6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000826001600160a01b0316636d3e313e6040518163ffffffff1660e01b8152600401604080518083038186803b15801561240457600080fd5b505afa158015612418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243c91906131f0565b90506000836001600160a01b031663b9ed8abf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561247957600080fd5b505afa15801561248d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124b1919061312b565b90506040518060c00160405280600081526020018360006001600160801b0316600281106124e1576124e16138b6565b60200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561251e57600080fd5b505afa158015612532573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612556919061327f565b8152602001856001600160a01b0316637e71fc7d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561259457600080fd5b505afa1580156125a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125cc919061327f565b815260200183600160200201516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561261157600080fd5b505afa158015612625573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612649919061327f565b8152602001856001600160a01b031663ba8d54686040518163ffffffff1660e01b815260040160206040518083038186803b15801561268757600080fd5b505afa15801561269b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bf919061327f565b8152602001826001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126fd57600080fd5b505afa158015612711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612735919061327f565b9052949350505050565b6127786040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000612797604051806040016040528060608152602001600081525090565b6080840151602001516127b5575050606082015160808301516127cd565b6127c7846080015185606001516117fa565b90925090505b600061282285602001518660000151815181106127ec576127ec6138b6565b60200260200101516128118760400151868960a001518a60c001518b60e00151611bef565b876101000151886101200151611cfe565b905060008560200151866000015181518110612840576128406138b6565b6020026020010151604001518660200151876000015181518110612866576128666138b6565b60200260200101516000015187610140015161288291906137d6565b61288c91906137d6565b6020870151518751919250906128a39060016137d6565b14156128f1576040805160c08101825282815283515160208083019190915284518101519282019290925283820180515160608301525190910151608082015260a081018590529450611be6565b855186906129009060016137d6565b815260a08101839052604081018590526101408101829052608081018490526129288161273f565b979650505050505050565b611114612aef565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156129735761296e83612c86565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156129ac57600080fd5b505afa9250505080156129dc575060408051601f3d908101601f191682019092526129d99181019061327f565b60015b612a4e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401611020565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114612ae35760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401611020565b5061296e838383612d51565b6033546001600160a01b031633146116d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611020565b603380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16612c135760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611020565b6116d1612d7c565b600054610100900460ff166116d15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611020565b6001600160a01b0381163b612d035760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401611020565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b612d5a83612df0565b600082511180612d675750805b1561296e57612d768383612e30565b50505050565b600054610100900460ff16612de75760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401611020565b6116d133612b49565b612df981612c86565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b612eaf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401611020565b600080846001600160a01b031684604051612eca9190613681565b600060405180830381855af49150503d8060008114612f05576040519150601f19603f3d011682016040523d82523d6000602084013e612f0a565b606091505b5091509150612f32828260405180606001604052806027815260200161391760279139612f3b565b95945050505050565b60608315612f4a575081612f74565b825115612f5a5782518084602001fd5b8160405162461bcd60e51b81526004016110209190613736565b9392505050565b6040518060400160405280612faa60405180606001604052806000815260200160008152602001600081525090565b8152602001612fd360405180606001604052806000815260200160008152602001600081525090565b905290565b600060c08284031215612fea57600080fd5b6040516040810181811067ffffffffffffffff8211171561300d5761300d6138cc565b60405290508061301d8484613038565b815261302c8460608501613038565b60208201525092915050565b60006060828403121561304a57600080fd5b6040516060810181811067ffffffffffffffff8211171561306d5761306d6138cc565b80604052508091508235815260208301356020820152604083013560408201525092915050565b600060c082840312156130a657600080fd5b60405160c0810181811067ffffffffffffffff821117156130c9576130c96138cc565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b60006020828403121561312057600080fd5b8135612f74816138e2565b60006020828403121561313d57600080fd5b8151612f74816138e2565b6000806040838503121561315b57600080fd5b8235613166816138e2565b915060208381013567ffffffffffffffff8082111561318457600080fd5b818601915086601f83011261319857600080fd5b8135818111156131aa576131aa6138cc565b6131bc601f8201601f191685016137a5565b915080825287848285010111156131d257600080fd5b80848401858401376000848284010152508093505050509250929050565b60006040828403121561320257600080fd5b82601f83011261321157600080fd5b61321961377c565b80838560408601111561322b57600080fd5b60005b6002811015613257578151613242816138e2565b8452602093840193919091019060010161322e565b509095945050505050565b60006020828403121561327457600080fd5b8151612f74816138f7565b60006020828403121561329157600080fd5b5051919050565b600080604083850312156132ab57600080fd5b82356132b6816138e2565b915060208301356132c6816138e2565b809150509250929050565b600080604083850312156132e457600080fd5b82356132ef816138e2565b946020939093013593505050565b6000806000806000610140868803121561331657600080fd5b853594506020860135935061332e8760408801612fd8565b925061010086013561333f816138f7565b9150610120860135613350816138f7565b809150509295509295909350565b6000806040838503121561337157600080fd5b823567ffffffffffffffff8082111561338957600080fd5b908401906040828703121561339d57600080fd5b6133a561377c565b8235828111156133b457600080fd5b8301601f810188136133c557600080fd5b80356020848211156133d9576133d96138cc565b8160051b94506133ea8186016137a5565b8281528181019084830187860184018d101561340557600080fd5b600097505b8488101561342857803583526001979097019691830191830161340a565b5085525094850135858401525090979590920135955050505050565b60006060828403121561345657600080fd5b612f748383613038565b600060c0828403121561347257600080fd5b60405160c0810181811067ffffffffffffffff82111715613495576134956138cc565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b6000806000806101c085870312156134f157600080fd5b6134fb8686613094565b935061350a8660c08701612fd8565b925061018085013561351b816138f7565b91506101a085013561352c816138f7565b939692955090935050565b600080600080610160858703121561354e57600080fd5b6135588686613094565b93506135678660c08701613038565b939693955050505061012082013591610140013590565b60006020828403121561359057600080fd5b81516001600160801b0381168114612f7457600080fd5b6000806000606084860312156135bc57600080fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156135eb57600080fd5b505082516020840151604085015160609095015191969095509092509050565b60006020828403121561361d57600080fd5b815163ffffffff81168114612f7457600080fd5b805160408084528151908401819052600091602091908201906060860190845b8181101561366d57835183529284019291840191600101613651565b505093820151949091019390935250919050565b6000825161369381846020870161385e565b9190910192915050565b602080825282518282018190526000919060409081850190868401855b828110156137085781518051855286810151878601528581015186860152606080820151908601526080808201519086015260a0908101519085015260c090930192908501906001016136ba565b5091979650505050505050565b82815260406020820152600061372e6040830184613631565b949350505050565b602081526000825180602084015261375581604085016020870161385e565b601f01601f19169190910160400192915050565b602081526000612f746020830184613631565b6040805190810167ffffffffffffffff8111828210171561379f5761379f6138cc565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156137ce576137ce6138cc565b604052919050565b600082198211156137e9576137e961388a565b500190565b600063ffffffff80831681851680830382111561380d5761380d61388a565b01949350505050565b600063ffffffff8084168061383b57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6000828210156138595761385961388a565b500390565b60005b83811015613879578181015183820152602001613861565b83811115612d765750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461111457600080fd5b6fffffffffffffffffffffffffffffffff198116811461111457600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205874288a071836b1024679f81a91a67020abfbd070b8a5d305d0b1a84c8260bf64736f6c63430008070033";

const isSuperArgs = xs => {
  return typeof xs[0] === "string" || Array.isArray(xs[0]) || "_isInterface" in xs[0];
};

class PoolStateHelper__factory extends _ethers.ContractFactory {
  constructor(...args) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, PoolStateHelper__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses) {
    let linkedBytecode = _bytecode;
    linkedBytecode = linkedBytecode.replace(new RegExp("__\\$1c55304bb94fd620584ae538170217172c\\$__", "g"), linkLibraryAddresses["contracts/libraries/PoolSwapLibrary.sol:PoolSwapLibrary"].replace(/^0x/, "").toLowerCase());
    return linkedBytecode;
  }

  deploy(overrides) {
    return super.deploy(overrides || {});
  }

  getDeployTransaction(overrides) {
    return super.getDeployTransaction(overrides || {});
  }

  attach(address) {
    return super.attach(address);
  }

  connect(signer) {
    return super.connect(signer);
  }

  static bytecode = _bytecode;
  static abi = _abi;

  static createInterface() {
    return new _ethers.utils.Interface(_abi);
  }

  static connect(address, signerOrProvider) {
    return new _ethers.Contract(address, _abi, signerOrProvider);
  }

}

exports.PoolStateHelper__factory = PoolStateHelper__factory;